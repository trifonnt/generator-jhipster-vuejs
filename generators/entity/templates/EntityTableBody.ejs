<% include fns.ejs %>



<template>
	<tr  :class="{visible: visibleHeader}">
	  <td><v-checkbox :value='isChecked' @change='updateChecked($event)' v-model='isChecked'></v-checkbox></td>
    <td><div class='label'></div></td>
    <% for(field of fields) { 
      if(field.fieldType == 'String' && field.fieldValues != undefined) {
    %>
      <td v-hasRole="'<%=field.visibleForRole%>'" @click='visibleHeader = !visibleHeader' :class="{visible: visibleHeader}" class='text-xs-center' :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")'>
        <v-chip v-for="val in items.item['<%=field.fieldName%>'].slice(0,2)" :key='val' color="primary" text-color="white">{{val}}</v-chip>
        <v-menu offset-y>
          <v-btn class='morechips'
            slot="activator"
            depressed
          >
            <v-icon>more_horiz</v-icon>
          </v-btn>
          <v-list>
            <v-list-tile v-for="val2 in items.item['<%=field.fieldName%>'].slice(2)">
              <v-chip label color='primary'>{{val2}}</v-chip>
            </v-list-tile>
          </v-list>
        </v-menu>
      </td>
    <%
      }
      else if(field.fieldType == 'byte[]' && field.fieldTypeBlobContent == 'any') {
    %>
      <td v-hasRole="'<%=field.visibleForRole%>'" @click='visibleHeader = !visibleHeader' :class="{visible: visibleHeader}" class='text-xs-center' :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")'>
        <a :href="'data:'+items.item['<%=field.fieldName%>ContentType']+';base64,'+items.item['<%=field.fieldName%>']" :download="items.item['<%=field.fieldName%>FileName']">{{items.item['<%=field.fieldName%>FileName']}}</a>
      </td>
    <%
      } 
      else if(field.fieldType == 'byte[]' && field.fieldTypeBlobContent == 'image') {
    %>
      <td v-hasRole="'<%=field.visibleForRole%>'" @click='visibleHeader = !visibleHeader' :class="{visible: visibleHeader}" class='text-xs-center' :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")'>
            <v-dialog v-model="dialogImage<%=field.fieldName%>" fullscreen hide-overlay transition="dialog-bottom-transition">
              <v-btn slot="activator" color="primary" dark>Preview</v-btn>
              <v-card>
                <img :src="'data:'+items.item['<%=field.fieldName%>ContentType']+';base64,'+items.item['<%=field.fieldName%>']"/>
              </v-card>
            </v-dialog>
      </td>    
    <%
      }
      else if(field.fieldType == 'byte[]' && field.fieldTypeBlobContent == 'text') {
        %>
        <td v-hasRole="'<%=field.visibleForRole%>'">
         <v-bottom-sheet v-model="<%=field.fieldName%>sheet">
          <v-btn
            slot="activator"
            color="primary"
          >
            {{$t('app.preview')}}
          </v-btn>

          <v-list>
            <v-subheader><p class='text-xs-center'>{{$t('app.preview')}}</p></v-subheader>
            <div v-html="items.item['<%=field.fieldName%>']"></div>
          </v-list>
        </v-bottom-sheet>
        </td>
        <%
      }
      else {
    %>
      <td v-hasRole="'<%=field.visibleForRole%>'" @click='visibleHeader = !visibleHeader' :class="{visible: visibleHeader}" class='text-xs-center' :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")' v-text="items.item['<%=field.fieldName%>']"></td>
    <% } } %>

    <% for(relationship of relationships) { 
      if(!(relationship.relationshipType == 'many-to-many' && relationship.ownerSide==false)) {

      if(relationship.relationshipType == 'many-to-many' || relationship.relationshipType == 'one-to-many') {
    %>



      <td v-hasRole="'<%=relationship.visibleForRole%>'" v-if="items.item['<%=pluralize(relationship.relationshipName)%>'] && items.item['<%=pluralize(relationship.relationshipName)%>'].length" @click='visibleHeader = !visibleHeader' :class="{visible: visibleHeader}" class='text-xs-center' :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=relationship.relationshipName%>")'>
        <v-chip v-for="val in items.item['<%=pluralize(relationship.relationshipName)%>'].slice(0,2)" :key='val' color="primary" text-color="white">{{val.<%=relationship.otherEntityField%>}}</v-chip>
        <v-menu offset-y>
          <v-btn class='morechips'
            slot="activator"
            depressed
          >
            <v-icon>more_horiz</v-icon>
          </v-btn>
          <v-list>
            <v-list-tile v-for="val2 in items.item['<%=pluralize(relationship.relationshipName)%>'].slice(2)">
              <v-chip label color='primary'>{{val2.<%=relationship.otherEntityField%>}}</v-chip>
            </v-list-tile>
          </v-list>
        </v-menu>
      </td>
      <td v-if="!items.item['<%=pluralize(relationship.relationshipName)%>'].length"></td>
    <%
      }
      else {
    %>
      <td v-hasRole="'<%=relationship.visibleForRole%>'"  @click='visibleHeader = !visibleHeader' :class="{visible: visibleHeader}" class='text-xs-center' :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=relationship.relationshipName%>")' v-text="items.item['<%=relationship.relationshipName%><%=firstToUpper(relationship.otherEntityField)%>']"></td>



    <% } } } %>
      <td class="justify-center layout px-0" :class="{visible: visibleHeader}">
          <router-link :to="{name: 'view'+storeName.charAt(0).toUpperCase() + storeName.slice(1), params:{id: items.item.id}}">
          <v-icon
            
          size='20px'
            class="mr-2"
            
          >remove_red_eye
          </v-icon>
          </router-link>
          <router-link :to="{name: 'edit'+storeName.charAt(0).toUpperCase() + storeName.slice(1), params:{id: items.item.id, masterId: $route.params.masterId}}">
          <v-icon
          size='20px'
            
            class='mr-2'
          >
            edit
          </v-icon>
        </router-link>
        <a href='#'>
          <v-icon
          size='20px'
            class='mr-2'
            @click="deleteItem"
          >
            delete
          </v-icon>
        </a>
        <v-menu>
          <v-btn
            slot="activator"
            dark
            icon
          >
            <a href='#'> <v-icon size='20px' class='mr-2' color='rgba(0,0,0,.54)'>more_vert</v-icon> </a>
          </v-btn>

          <v-list>
            <v-list-tile>
              <v-list-tile-title>Action</v-list-tile-title>
            </v-list-tile>
            <v-list-tile>
              <v-list-tile-title>Action</v-list-tile-title>
            </v-list-tile>
            <v-list-tile>
              <v-list-tile-title>Action</v-list-tile-title>
            </v-list-tile>
          </v-list>
        </v-menu>
      </td>
      </tr>
</template>

<script>
  import {createStore} from '../../../storex/'

	export default {
		data: () => ({
      <% for(field of fields) {
        if(field.fieldType == 'byte[]' && field.fieldTypeBlobContent == 'text') {
      %>
        <%=field.fieldName%>sheet: false,
      <% } %>
      <% if(field.fieldType == 'byte[]' && field.fieldTypeBlobContent == 'text') { %>
        dialogImage<%=field.fieldName%>: false,
      <% } } %>
    	visibleHeader: false,
    }),
    created() {
    },
    computed: {
      isChecked: {
        set: function() {

        },
        get: function() {
          return this.$store.getters.isChecked(this.items.item.id);
        },
      }
    },
		methods: {
      deleteItem() {
        this.$store.commit('deleteItem', this.items.item)
      },
      updateChecked(event) {
        let e = {value:this.items.item.id, checked: event!=null}
        this.$store.dispatch('updateChecked', e);
      },
		},
		props: {
			items: Object,
			headers: Array,
      storeName: String,
		},

	}
</script>

<style scoped>
  .label {
    width: 7px;
    height: 30px;
    background: red;
  }
  .chipenum {
    font-size: 10px;
  }
  .morechips {
    height: 32px;
  }
  >>>.v-list {
    max-height: 200px;
    overflow: scroll;
  }
</style>