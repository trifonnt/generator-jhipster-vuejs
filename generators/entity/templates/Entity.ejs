<% include fns.ejs %>

<template>
 <v-app id="inspire">
  <div class='margin'></div>
  <div id='toptable' style='display:flex'>
    <div id='createnew'>
      <v-btn to='/entities/<%=toLower(name)%>/new'  color="primary">
          <v-icon>add</v-icon>
          {{$t('<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.home.createLabel')}}
      </v-btn>
    </div>
   <search></search>
   <div id='filterlabels'>
    <filter-labels :change='getData' store-name="<%=toLower(name)%>"></filter-labels>
   </div>
  </div>
    <div  v-show='areAllChecked'>
      <v-btn @click='deleteAll'>{{$t('app.deleteAll')}}
            <v-icon color="red">delete</v-icon>
      </v-btn>
      <v-btn @click='print'>{{$t('app.print')}}
        <v-icon color="block">print</v-icon>
      </v-btn>
      <div id='selectLabels'>
        <select-labels v-on:selected='selectLabels' store-name="<%=toLower(name)%>"></select-labels>
      </div>
    </div>
 <delete-dialog store-name="<%=toLower(name)%>"></delete-dialog>
 <v-data-table
    :headers="headers"
    :items="entitys"
    :loading='loading'
    class="elevation-1"
    :pagination='pagination'
    v-on:update:pagination='updatePagination'
    :total-items='totalItems'
    :rows-per-page-items="[1,10,20,50]"
    select-all
  >
    <template slot="headers" slot-scope="props">
      <entity-table-head :data.sync='props' :pagination.sync='pagination' :indeterminite.sync='indeterminite' :allChecked.sync='areAllChecked'></entity-table-head>
    </template>
    <template slot="items" slot-scope="props">
        <entity-table-body :headers = 'headers' :items = 'props' store-name="<%=name%>"></entity-table-body>
    </template>
    <template slot='footer'>
      <tr v-for='row in footer'>
        <td>{{row.header}}</td>
        <td colspan='100%' class='rightalign'>{{row.value}}</td>
      </tr>
    </template>
  </v-data-table>

  </v-app>
</template>

<script>
  import table from '../../mixins/Table'
  import {createStore} from '../../../storex/'
  import SelectLabels from '../../common/SelectLabels.vue'
  import FilterLabels from '../../common/FilterLabels.vue'
  import Search from './Search.vue'
  import EntityTableBody from './EntityTableBody.vue'
  import EntityTableHead from './EntityTableHead.vue'
  import DeleteDialog from './DeleteDialog.vue'

  import EventBus from '../../common/EventBus.js'

  import _ from 'lodash';

  export default {
      mixins: [table("<%=toLower(name)%>")],
      props: {
        filterName: String,
        masterId: {
          type: Number,
          default: '',
        }
      },
      data: () => ({
        footer: [],
        headers: [
          <% fields.forEach(field=>{%>
            { text: "<%=toSpaced(field.fieldName)%>", value: "<%=field.fieldName%>" },
          <%})%>
          <% for(relationship of relationships) { %>
            { text: "<%=toSpaced(relationship.relationshipName)%>", value: "<%=relationship.relationshipName%>" },
          <% }%>
          { text: 'Actions', value: 'actions', sortable: false }
        ],
        labels: [
          {text:'completed', value:1},
          {text:'in progress', value:2}
        ],
        selectedLabels: [],
      }),
      created() {
        EventBus.$on('getData', ()=> {
          this.getData({masterId: this.$route.params.masterId, filterName: this.filterName})
        })
      },
      computed: {
        checkedDeleted() {
          return this.$store.state.table.entity.checkedDeleted
        },
      },
      methods: {
        selectLabels(labels) {
          this.getData({labels})
        },
        print() {
          let status = this.$store.state.app.leftDrawer;
          this.$store.commit('setLeftDrawer', false);
          this.$nextTick(()=>window.print());
          window.onafterprint = () => {
            this.$nextTick(() => this.$store.commit('setLeftDrawer', status))
          }
        },
        updatePagination(pagination) {
          if(!_.isEqual(pagination,this.pagination)) this.pagination = pagination
        }
      },
      beforeCreate() {
        this.$store = createStore('<%=toLower(name)%>', '')
      },
      components: {
        SelectLabels,
        FilterLabels,
        Search,
        EntityTableBody,
        EntityTableHead,
        DeleteDialog,
      }
  }
</script>
<style>
<style>
  #toptable {
    display: flex;
    position: sticky;
    top: 0;
    background: #f5f5f5;
    width: 100%;
    z-index: 1;
  }
  #createnew {
    display: inline-block;
    align-self: center;
  }
  #selectLabels {
    display: inline-block;
  }
  #filterlabels {
    display: inline-block;
    margin-left: 10px;
  }
  #filterlabels .v-select.v-select--chips .v-select__selections  {
    min-height: initial;
  }
  .greenlabel {
    background: green;
    width: 30px;
    height: 30px;
  }
  .margin {
  }
  .rightalign {
    text-align: right;
  }
</style>