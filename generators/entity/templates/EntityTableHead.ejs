<%_ include fns.ejs _%>
<template>
	<tr>
	<th width='10px'>
	  <v-checkbox
	  	:input-value = 'allChecked'
	    :indeterminate="indeterminite"
	    primary
	    hide-details
	    @change="$store.commit('toggleAll')"
	  ></v-checkbox>
	</th>
	<th width='10px'>Label</th>
	<%_ for(field of fields) { _%>
		<th v-show='hideName!="<%=field.fieldName%>" && <%=field.visibleInTableMode%>' v-hasRole="'<%=field.visibleForRole%>'"
		  :class="['column sortable', pagination.descending ? 'desc' : 'asc', '<%=field.fieldName%>' === pagination.sortBy ? 'active' : '']"
		  @click="changeSort('<%=field.fieldName%>')"
		  :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")'
		>
		  	<v-icon small>arrow_upward</v-icon>
	  		{{$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")}}
		</th>

	<%_ } _%>
	
	<%_ for(relationship of relationships) { 
  		if(!(relationship.relationshipType == 'many-to-many' && relationship.ownerSide==false)) {
	_%>
		<th v-show='hideName!="<%=relationship.relationshipName%>" && <%=relationship.visibleInTableMode%>' v-hasRole="'<%=relationship.visibleForRole%>'"
		  :class="['column sortable', pagination.descending ? 'desc' : 'asc', '<%=relationship.relationshipName%>' === pagination.sortBy ? 'active' : '']"
		  @click="changeSort('<%=relationship.relationshipName%>')"
		  :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%= (relationship.relationshipType == 'many-to-many' || relationship.relationshipType == 'one-to-many') ? pluralize(relationship.relationshipName) : relationship.relationshipName %>")'
		>
		  	<v-icon small>arrow_upward</v-icon>
	  		{{$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%= (relationship.relationshipType == 'many-to-many' || relationship.relationshipType == 'one-to-many') ? pluralize(relationship.relationshipName) : relationship.relationshipName %>")}}
		</th>
		
	<%_ } } _%>
<!-- 	<th
	  v-for="header in data.headers"
	  :key="header.text"
	  :class="['column sortable', pagination.descending ? 'desc' : 'asc', header.value === pagination.sortBy ? 'active' : '']"
	  @click="changeSort(header.value)"
	  :data-label='header.text'

	> -->
	<th>Actions</th>
	</tr>
</template>

<script>
	import {mapGetters} from 'vuex'
    
	let vueObj = {};

	vueObj.data = () => ({})
	vueObj.computed = {
		allChecked() {
			return this.$store.getters.allChecked
		}
	}
	vueObj.methods = {
		changeSort(val) {
			this.$store.dispatch('changeSort', val)
		}
	}

	try {
	  let extend = require('./EntityTableHeadFunctionsX')
	  vueObj.data && Object.assign(vueObj.data, extend.data)
	  vueObj.mehtods && Object.assign(vueObj.methods, extend.methods)
	  vueObj.computed && Object.assign(vueObj.computed, extend.computed)
	} catch(err) {
	  console.log(err)
	}

	export default {
		data: vueObj.data,
		computed: vueObj.computed,
		methods: vueObj.methods,
		props: {
			data: Object,
			pagination: Object,
			indeterminite: Boolean,
			hideName: String,
		},
	}
</script>

<style>
	