<% include fns.ejs %>


<template>
	<tr>
	<th width='10px'>
	  <v-checkbox
	  	:input-value = 'allChecked'
	    :indeterminate="indeterminite"
	    primary
	    hide-details
	    @change="$store.commit('toggleAll')"
	  ></v-checkbox>
	</th>
	<th width='10px'>Label</th>
	<% for(field of fields) { %>
		<th :v-hasRole="field.visibleForRole"
		  :class="['column sortable', pagination.descending ? 'desc' : 'asc', '<%=field.fieldName%>' === pagination.sortBy ? 'active' : '']"
		  @click="changeSort('<%=field.fieldName%>')"
		  :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")'
		>
		  	<v-icon small>arrow_upward</v-icon>
	  		{{$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=field.fieldName%>")}}
		</th>
	<% } %>
	<% for(relationship of relationships) { 
  		if(!(relationship.relationshipType == 'many-to-many' && relationship.ownerSide==false)) {
	%>
		<th :v-hasRole="relationship.visibleForRole"
		  :class="['column sortable', pagination.descending ? 'desc' : 'asc', '<%=relationship.relationshipName%>' === pagination.sortBy ? 'active' : '']"
		  @click="changeSort('<%=relationship.relationshipName%>')"
		  :data-label='$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=relationship.relationshipName%>")'
		>
		  	<v-icon small>arrow_upward</v-icon>
	  		{{$t("<%=firstToLower(name)%>.<%=baseNameApp%>.<%=firstToLower(name)%>.<%=relationship.relationshipName%>")}}
		</th>
	<% } } %>
<!-- 	<th
	  v-for="header in data.headers"
	  :key="header.text"
	  :class="['column sortable', pagination.descending ? 'desc' : 'asc', header.value === pagination.sortBy ? 'active' : '']"
	  @click="changeSort(header.value)"
	  :data-label='header.text'

	> -->
	<th>Actions</th>
	</tr>
</template>

<script>
	import {mapGetters} from 'vuex'
	export default {
		data: () => ({}),
		computed: {
			allChecked() {
				return this.$store.getters.allChecked
			}
		},
		methods: {
			changeSort(val) {
				this.$store.dispatch('changeSort', val)
			}
		},
		props: {
			data: Object,
			pagination: Object,
			indeterminite: Boolean,
		},
	}
</script>

<style>
	